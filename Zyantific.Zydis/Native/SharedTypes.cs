namespace Zyantific.Zydis.Native
{
    public enum OperandType
    {
        OPERAND_TYPE_UNUSED,
        OPERAND_TYPE_REGISTER,
        OPERAND_TYPE_MEMORY,
        OPERAND_TYPE_POINTER,
        OPERAND_TYPE_IMMEDIATE,
        OPERAND_TYPE_MAX_VALUE = OPERAND_TYPE_IMMEDIATE,
    }

    public enum OperandVisibility
    {
        OPERAND_VISIBILITY_INVALID,
        OPERAND_VISIBILITY_EXPLICIT,
        OPERAND_VISIBILITY_IMPLICIT,
        OPERAND_VISIBILITY_HIDDEN,
        OPERAND_VISIBILITY_MAX_VALUE = OPERAND_VISIBILITY_HIDDEN,
    }

    public enum OperandAction
    {
        OPERAND_ACTION_READ = 0x01,
        OPERAND_ACTION_WRITE = 0x02,
        OPERAND_ACTION_CONDREAD = 0x04,
        OPERAND_ACTION_CONDWRITE = 0x08,
        OPERAND_ACTION_READWRITE = OPERAND_ACTION_READ | OPERAND_ACTION_WRITE,
        OPERAND_ACTION_CONDREAD_CONDWRITE = OPERAND_ACTION_CONDREAD | OPERAND_ACTION_CONDWRITE,
        OPERAND_ACTION_READ_CONDWRITE = OPERAND_ACTION_READ | OPERAND_ACTION_CONDWRITE,
        OPERAND_ACTION_CONDREAD_WRITE = OPERAND_ACTION_CONDREAD | OPERAND_ACTION_WRITE,
        OPERAND_ACTION_MASK_READ = OPERAND_ACTION_READ | OPERAND_ACTION_CONDREAD,
        OPERAND_ACTION_MASK_WRITE = OPERAND_ACTION_WRITE | OPERAND_ACTION_CONDWRITE,
    }

    public enum InstructionEncoding
    {
        INSTRUCTION_ENCODING_LEGACY,
        INSTRUCTION_ENCODING_3DNOW,
        INSTRUCTION_ENCODING_XOP,
        INSTRUCTION_ENCODING_VEX,
        INSTRUCTION_ENCODING_EVEX,
        INSTRUCTION_ENCODING_MVEX,
        INSTRUCTION_ENCODING_MAX_VALUE = INSTRUCTION_ENCODING_MVEX,
    }

    public enum OpcodeMap
    {
        OPCODE_MAP_DEFAULT,
        OPCODE_MAP_0F,
        OPCODE_MAP_0F38,
        OPCODE_MAP_0F3A,
        OPCODE_MAP_0F0F,
        OPCODE_MAP_XOP8,
        OPCODE_MAP_XOP9,
        OPCODE_MAP_XOPA,
        OPCODE_MAP_MAX_VALUE = OPCODE_MAP_XOPA,
    }

    public enum OperandEncoding
    {
        OPERAND_ENCODING_NONE,
        OPERAND_ENCODING_MODRM_REG,
        OPERAND_ENCODING_MODRM_RM,
        OPERAND_ENCODING_OPCODE,
        OPERAND_ENCODING_NDSNDD,
        OPERAND_ENCODING_IS4,
        OPERAND_ENCODING_MASK,
        OPERAND_ENCODING_DISP8,
        OPERAND_ENCODING_DISP16,
        OPERAND_ENCODING_DISP32,
        OPERAND_ENCODING_DISP64,
        OPERAND_ENCODING_DISP16_32_64,
        OPERAND_ENCODING_DISP32_32_64,
        OPERAND_ENCODING_DISP16_32_32,
        OPERAND_ENCODING_UIMM8,
        OPERAND_ENCODING_UIMM16,
        OPERAND_ENCODING_UIMM32,
        OPERAND_ENCODING_UIMM64,
        OPERAND_ENCODING_UIMM16_32_64,
        OPERAND_ENCODING_UIMM32_32_64,
        OPERAND_ENCODING_UIMM16_32_32,
        OPERAND_ENCODING_SIMM8,
        OPERAND_ENCODING_SIMM16,
        OPERAND_ENCODING_SIMM32,
        OPERAND_ENCODING_SIMM64,
        OPERAND_ENCODING_SIMM16_32_64,
        OPERAND_ENCODING_SIMM32_32_64,
        OPERAND_ENCODING_SIMM16_32_32,
        OPERAND_ENCODING_JIMM8,
        OPERAND_ENCODING_JIMM16,
        OPERAND_ENCODING_JIMM32,
        OPERAND_ENCODING_JIMM64,
        OPERAND_ENCODING_JIMM16_32_64,
        OPERAND_ENCODING_JIMM32_32_64,
        OPERAND_ENCODING_JIMM16_32_32,
        OPERAND_ENCODING_MAX_VALUE = OPERAND_ENCODING_JIMM16_32_32,
    }

    public enum ElementType
    {
        ELEMENT_TYPE_INVALID,
        ELEMENT_TYPE_STRUCT,
        ELEMENT_TYPE_UINT,
        ELEMENT_TYPE_INT,
        ELEMENT_TYPE_FLOAT16,
        ELEMENT_TYPE_FLOAT32,
        ELEMENT_TYPE_FLOAT64,
        ELEMENT_TYPE_FLOAT80,
        ELEMENT_TYPE_LONGBCD,
        ELEMENT_TYPE_CC,
        ELEMENT_TYPE_MAX_VALUE = ELEMENT_TYPE_CC,
    }

    public struct SharedTypeGlobals
    {
        public const int MaxInstructionLength = 15;
        public const int MaxOperandCount = 10;
    }
}
